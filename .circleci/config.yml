version: 2.1
jobs:
  build_test:
    docker:
      - image: cimg/python:3.11.0
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install dependencies and make Read the Docs
          command: |  # checkout source code to working directory
            wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
            chmod +x miniconda.sh && ./miniconda.sh -b -p ~/miniconda
            export PATH="~/miniconda/bin:$PATH"
            conda update --yes --quiet conda
            conda create -n testenv --yes --quiet python=3
            source activate testenv
            conda install --yes pip numpy pandas scipy scikit-learn matplotlib sphinx sphinx_rtd_theme numpydoc pillow
            pip install sphinx-gallery
            pip install .
            cd doc
            make html
      - run:
          name: run tests
          command: |
            cd ..
            pipenv run pytest
      - store_artifacts:
          path: doc/_build/html/
          destination: doc
      - store_artifacts:
          path: ~/log.txt
      - run: ls -ltrh doc/_build/html
  test_pypi_publish:
    docker:
      - image: cimg/python:3.11.0
    steps:
      - checkout # checkout source code to working directory
      - run:
          name: create whl, install twine and publish to Test PyPI
          command: |
            python3 setup.py sdist bdist_wheel
            sudo add-apt-repository universe -y
            sudo apt-get update
            sudo apt install -y python3-pip
            sudo pip install pipenv
            pipenv install twine
            pipenv run twine upload --repository testpypi dist/*
  pypi_publish:
    docker:
      - image: cimg/python:3.11.0
    steps:
      - checkout # checkout source code to working directory
      - run:
          name: create whl, install twine and publish to PyPI
          command: |
            python3 setup.py sdist bdist_wheel
            sudo add-apt-repository universe -y
            sudo apt-get update
            sudo apt install -y python3-pip
            sudo pip install pipenv
            pipenv install twine
            pipenv run twine upload dist/*
workflows:
  build_test_publish:
      jobs:
        - build_test
        - test_pypi_publish:
            requires:
              - build_test
            filters:
              branches:
                only:
                  - master
        - pypi_publish:
            requires:
              - build_test
            filters:
              branches:
                only:
                  - master